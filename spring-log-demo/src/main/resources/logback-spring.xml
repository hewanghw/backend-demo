<?xml version="1.0" encoding="UTF-8"?>
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有指定默认时间间隔为60秒。当scan为true时，此属性才生效 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false -->
<configuration  scan="true" scanPeriod="60 seconds" debug="false">
    <!-- 定义上下文名称，可以用于区分不同应用程序，可通过%contextName来使用 -->
    <contextName>spring-log-demo</contextName>
    <!-- 定义变量，可以使“${}”来使用 -->
    <property name="log.path" value="/logs" />
    <property name="console_log_pattern"
              value="%yellow(%date{yyyy-MM-dd HH:mm:ss}) %contextName |%highlight(%-5level) |%blue(%thread) |%blue(%file:%line) |%green(%logger) |%cyan(%msg%n)"/>

    <!-- 输出到控制台的格式化 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 通过级别阈值来过滤日志-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>info</level>
        </filter>
        <encoder>
            <pattern>${console_log_pattern}</pattern>
        </encoder>
    </appender>

    <!-- info级别日志，输出到文件的格式化 -->
    <appender name="info_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${log.path}/log_info.log</file>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
        <!-- 将日志都写到一个文件不是个好行为，可以按某种策略将日志输入到文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <fileNamePattern>${log.path}/log_info_%d{yyyy-MM-dd_HH-mm}.%i.log</fileNamePattern>
            <!-- 每个日志文件最多存储大小，如果指定这个则 fileNamePattern中要加 %i -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <!-- 此日志文件只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- error级别日志，输出到文件的格式化 -->
    <appender name="error_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/log_error.log</file>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/log_error_%d{yyyy-MM-dd_HH-mm}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <!-- 此日志文件只记录error级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <root level="info">
        <appender-ref ref="console" />
        <appender-ref ref="info_file" />
        <appender-ref ref="error_file" />
    </root>

     <!-- 单独配置日志打印级别, addtivity:是否向上级传递打印信息。默认是true。-->
    <logger name="com.hw.controller.HelloController.controller.HelloController" level="error" additivity="false">
        <appender-ref ref="console"/>
        <appender-ref ref="error_file"/>
    </logger>

<!-- 还可以根据不同环境来切换 -->
    <!--开发环境:打印控制台-->
<!--    <springProfile name="dev">-->
<!--        <root level="INFO">-->
<!--            <appender-ref ref="CONSOLE" />-->
<!--        </root>-->
<!--    </springProfile>-->

    <!--生产环境:输出到文件-->
<!--    <springProfile name="pro">-->
<!--        <root level="INFO">-->
<!--            <appender-ref ref="CONSOLE" />-->
<!--            <appender-ref ref="DEBUG_FILE" />-->
<!--            <appender-ref ref="INFO_FILE" />-->
<!--            <appender-ref ref="ERROR_FILE" />-->
<!--            <appender-ref ref="WARN_FILE" />-->
<!--        </root>-->
<!--    </springProfile>-->

</configuration>